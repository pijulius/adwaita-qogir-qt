// Drawing mixins
// generic drawing of more complex things

// entries

@mixin entry($t, $fc:$focus_border_color) {
//
// Entries drawing function
//
// $t: entry type
//
// possible $t values:
// normal, focus, insensitive, backdrop, backdrop-insensitive, osd, osd-focus, osd-backdrop, block_cursor;
//

  @if $t==normal {
    color: $text_color;
    border-color: $borders_color;
    background-color: $base_color;
  }

  @if $t==insensitive {
    color: $insensitive_fg_color;
    border-color: $insensitive_borders_color;
    background-color: $insensitive_bg_color;
  }

  @if $t==backdrop {
    color: $backdrop_text_color;
    border-color: $backdrop_borders_color;
    background-color: $backdrop_base_color;
  }

  @if $t==backdrop-insensitive {
    color: $backdrop_insensitive_fg_color;
    border-color: $backdrop_insensitive_borders_color;
    background-color: $backdrop_insensitive_bg_color;
  }

  @if $t==osd {
    color: $osd_fg_color;
    border-color: $osd_borders_color;
    background-color: $osd_bg_color;
    background-clip: padding-box;
    box-shadow: none;
  }

  @if $t==osd-focus {
    color: $osd_fg_color;
    border-color: $selected_borders_color;
    background-color: $osd_bg_color;
    background-clip: padding-box;
  }

  @if $t==osd-insensitive {
    color: $osd_fg_color;
    border-color: $osd_borders_color;
    background-color: $osd_bg_color;
    background-clip: padding-box;
  }

  @if $t==osd-backdrop {
    color: $osd_fg_color;
    border-color: $osd_borders_color;
    background-color: $osd_bg_color;
    background-clip: padding-box;
  }

  @if $t==block_cursor {
    color: $base_color;
    background-color: $text_color;
  }
}

// buttons

$_default_button_c: lighten($bg_color,2%);
@mixin button($t, $c:$_default_button_c, $tc:$fg_color) {
//
// Button drawing function
//
// $t:    button type,
//
// possible $t values:
// normal, hover, active, checked-hover, checked-active, insensitive, insensitive-active,
// backdrop, backdrop-active, backdrop-insensitive, backdrop-insensitive-active,
// osd, osd-hover, osd-active, osd-insensitive, osd-backdrop, undecorated
//

  @if $t==normal {
    color: $text_color;
    outline-color: transparent;
    border-color: $borders_color;
    background-image: image($base_color);
  }

  @else if $t==hover {
    color: $text_color;
    border-color: $borders_color;
    background-image: image($base_color);
  }

  @else if $t==active {
    color: $selected_fg_color;
    border-color: $selected_borders_color;
    background-image: image($selected_bg_color);
  }

  @else if $t==checked-hover {
    color: $selected_fg_color;
    border-color: $selected_borders_color;
    background-image: image($selected_bg_color);
  }

  @else if $t==checked-active {
    color: $selected_fg_color;
    border-color: $selected_borders_color;
    background-image: image($selected_bg_color);
  }

  @else if $t==insensitive {
    color: $insensitive_fg_color;
    border-color: $insensitive_borders_color;
    background-image: image($insensitive_bg_color);
  }

  @else if $t==insensitive-active {
    color: transparentize($selected_fg_color, 0.15);
    border-color: transparentize($selected_borders_color, 0.5);
    background-image: image(transparentize($selected_bg_color, 0.5));
  }

  @else if $t==backdrop {
    color: $backdrop_text_color;
    border-color: $backdrop_borders_color;
    background-image: image($backdrop_base_color);
  }

  @else if $t==backdrop-active {
    color: $backdrop_selected_fg_color;
    border-color: $backdrop_selected_borders_color;
    background-image: image($backdrop_selected_bg_color);
  }

  @else if $t==backdrop-insensitive {
    color: $backdrop_insensitive_fg_color;
    border-color: $backdrop_insensitive_borders_color;
    background-image: image($backdrop_insensitive_bg_color);
  }

  @else if $t==backdrop-insensitive-active {
    color: transparentize($selected_fg_color, 0.15);
    border-color: transparentize($selected_borders_color, 0.5);
    background-image: image(transparentize($selected_bg_color, 0.5));
  }

  @else if $t==osd {
    color: $osd_fg_color;
    outline-color: transparent;
    border-color: $osd_borders_color;
    background-color: transparent;
    background-image: image($osd_bg_color);
    background-clip: padding-box;
  }

  @else if $t==osd-hover {
    color: $osd_fg_color;
    border-color: $osd_borders_color;
    background-color: transparent;
    background-image: image($osd_bg_color);
    background-clip: padding-box;
  }

  @else if $t==osd-active {
    color: $selected_fg_color;
    border-color: $selected_borders_color;
    background-color: transparent;
    background-image: image($selected_bg_color);
    background-clip: padding-box;
    box-shadow: none;
  }

  @else if $t==osd-insensitive {
    color: transparentize($osd_fg_color, 0.15);
    border-color: transparentize($osd_borders_color, 0.5);
    background-color: transparent;
    background-image: image(transparentize($osd_bg_color, 0.5));
    background-clip: padding-box;
  }

  @else if $t==osd-backdrop {
    color: $osd_fg_color;
    outline-color: transparent;
    border-color: $osd_borders_color;
    background-color: transparent;
    background-image: image($osd_bg_color);
    background-clip: padding-box;
  }

  @else if $t==undecorated {
    border-color: transparent;
    background-color: transparent;
    background-image: none;
    box-shadow: none;
  }
  @else if $t==undecorated-hover {
    border-color: transparent;
    background-image: none;
    box-shadow: none;
    @if $variant == 'light' {
      background-color: darken($bg_color,14%);
    } @else {
      background-color: darken($bg_color,1%);
    }
  }
  @else if $t==undecorated-active {
    border-color: transparent;
    background-image: none;
    box-shadow: none;
    background-color: $selected_bg_color;
  }
}

// Check/Radio boxes

@mixin check($t, $c:$checkradio_bg_color, $tc:$checkradio_fg_color, $checked: false) {
  //
  // Check/Radio drawing function
  //
  // $t:        check/radio type,
  // $checked:  bool to chose between checked/unchecked
  //
  // possible $t values:
  // normal, hover, active, insensitive, backdrop, backdrop-insensitive, menu

  @if $t==normal  {
    background-clip: if($checked, border-box, padding-box);
    background-image: image($checkradio_bg_color);
    border-color: $checkradio_borders_color;
    box-shadow: none;
    color: $checkradio_fg_color;
  }

  @if $t==hover {
    background-image: image($checkradio_bg_color);
  }

  @if $t==active {
    background-image: image($checkradio_bg_color);
  }

  @if $t==insensitive {
    color: transparentize($checkradio_fg_color, 0.5);
    border-color: transparentize($checkradio_borders_color, 0.5);
  }

  @if $t==backdrop {
    background-clip: if($checked, border-box, padding-box);
    background-image: image($checkradio_bg_color);
    border-color: $checkradio_borders_color;
    color: $checkradio_fg_color;
  }

  @if $t==backdrop-insensitive {
    color: transparentize($checkradio_fg_color, 0.5);
    border-color: transparentize($checkradio_borders_color, 0.5);
  }

  @if $t==menu {
    border-color: $checkradio_borders_color;
    background-image: image($checkradio_bg_color);
    color: $checkradio_fg_color;
  }

  @if $t==menu-active {
    border-color: transparentize($selected_fg_color, 0.3);
    color: $selected_fg_color;
    background-image: image($selected_bg_color);
  }
}

// overshoot

@mixin overshoot($p, $t:normal, $c:$fg_color) {
//
// overshoot
//
// $p: position
// $t: type
// $c: base color
//
// possible $p values:
// top, bottom, right, left
//
// possible $t values:
// normal, backdrop
//

  $_small_gradient_length: 3%;
  $_big_gradient_length: 50%;

  $_small_gradient_size: 100% $_small_gradient_length;
  $_big_gradient_size: 100% $_big_gradient_length;

  @if $p==right or $p==left {
    $_small_gradient_size: $_small_gradient_length 100%;
    $_big_gradient_size: $_big_gradient_length 100%;
  }

  $_small_gradient_color: $c;
  $_big_gradient_color: transparentize($c, 0.93);

  @if $c==$fg_color {
    $_small_gradient_color: darken($borders_color, 10%);
    $_big_gradient_color: transparentize($fg_color, 0.93);

    @if $t==backdrop { $_small_gradient_color: $backdrop_borders_color; }
  }

  $_small_gradient: radial-gradient(farthest-side at $p,
                                    $_small_gradient_color 85%,
                                    transparentize($_small_gradient_color, 1));

  $_big_gradient: radial-gradient(farthest-side at $p,
                                  $_big_gradient_color,
                                  transparentize($_big_gradient_color, 1));

  @if $t==normal {
    background-image: $_small_gradient, $_big_gradient;
    background-size: $_small_gradient_size, $_big_gradient_size;
  }

  @else if $t==backdrop {
    background-image: $_small_gradient;
    background-size: $_small_gradient_size;
  }

  background-repeat: no-repeat;
  background-position: $p;

  background-color: transparent; // reset some properties to be sure to not inherit them somehow
  border: none;                  //
  box-shadow: none;              //
}